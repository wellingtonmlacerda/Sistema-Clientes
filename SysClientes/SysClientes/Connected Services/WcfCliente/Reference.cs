//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SysClientes.WcfCliente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clientes", Namespace="http://schemas.datacontract.org/2004/07/WCF_CRUD")]
    [System.SerializableAttribute()]
    public partial class Clientes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GetSetCLIE_CPFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GetSetCLIE_FK_PK_SICLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GetSetCLIE_FK_PK_TICLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GetSetCLIE_NASCIMENTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GetSetCLIE_NOMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GetSetCLIE_PK_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GetSetCLIE_SEXOField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetSetCLIE_CPF {
            get {
                return this.GetSetCLIE_CPFField;
            }
            set {
                if ((object.ReferenceEquals(this.GetSetCLIE_CPFField, value) != true)) {
                    this.GetSetCLIE_CPFField = value;
                    this.RaisePropertyChanged("GetSetCLIE_CPF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GetSetCLIE_FK_PK_SICL {
            get {
                return this.GetSetCLIE_FK_PK_SICLField;
            }
            set {
                if ((this.GetSetCLIE_FK_PK_SICLField.Equals(value) != true)) {
                    this.GetSetCLIE_FK_PK_SICLField = value;
                    this.RaisePropertyChanged("GetSetCLIE_FK_PK_SICL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GetSetCLIE_FK_PK_TICL {
            get {
                return this.GetSetCLIE_FK_PK_TICLField;
            }
            set {
                if ((this.GetSetCLIE_FK_PK_TICLField.Equals(value) != true)) {
                    this.GetSetCLIE_FK_PK_TICLField = value;
                    this.RaisePropertyChanged("GetSetCLIE_FK_PK_TICL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GetSetCLIE_NASCIMENTO {
            get {
                return this.GetSetCLIE_NASCIMENTOField;
            }
            set {
                if ((this.GetSetCLIE_NASCIMENTOField.Equals(value) != true)) {
                    this.GetSetCLIE_NASCIMENTOField = value;
                    this.RaisePropertyChanged("GetSetCLIE_NASCIMENTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetSetCLIE_NOME {
            get {
                return this.GetSetCLIE_NOMEField;
            }
            set {
                if ((object.ReferenceEquals(this.GetSetCLIE_NOMEField, value) != true)) {
                    this.GetSetCLIE_NOMEField = value;
                    this.RaisePropertyChanged("GetSetCLIE_NOME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GetSetCLIE_PK_ID {
            get {
                return this.GetSetCLIE_PK_IDField;
            }
            set {
                if ((this.GetSetCLIE_PK_IDField.Equals(value) != true)) {
                    this.GetSetCLIE_PK_IDField = value;
                    this.RaisePropertyChanged("GetSetCLIE_PK_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetSetCLIE_SEXO {
            get {
                return this.GetSetCLIE_SEXOField;
            }
            set {
                if ((object.ReferenceEquals(this.GetSetCLIE_SEXOField, value) != true)) {
                    this.GetSetCLIE_SEXOField = value;
                    this.RaisePropertyChanged("GetSetCLIE_SEXO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfCliente.IServiceCliente")]
    public interface IServiceCliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/InsertClientes", ReplyAction="http://tempuri.org/IServiceCliente/InsertClientesResponse")]
        string InsertClientes(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/InsertClientes", ReplyAction="http://tempuri.org/IServiceCliente/InsertClientesResponse")]
        System.Threading.Tasks.Task<string> InsertClientesAsync(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/GetClientes", ReplyAction="http://tempuri.org/IServiceCliente/GetClientesResponse")]
        System.Data.DataSet GetClientes(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/GetClientes", ReplyAction="http://tempuri.org/IServiceCliente/GetClientesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientesAsync(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/FetchUpdatedRecords", ReplyAction="http://tempuri.org/IServiceCliente/FetchUpdatedRecordsResponse")]
        System.Data.DataSet FetchUpdatedRecords(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/FetchUpdatedRecords", ReplyAction="http://tempuri.org/IServiceCliente/FetchUpdatedRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchUpdatedRecordsAsync(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/UpdateClientes", ReplyAction="http://tempuri.org/IServiceCliente/UpdateClientesResponse")]
        string UpdateClientes(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/UpdateClientes", ReplyAction="http://tempuri.org/IServiceCliente/UpdateClientesResponse")]
        System.Threading.Tasks.Task<string> UpdateClientesAsync(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/DeleteClientes", ReplyAction="http://tempuri.org/IServiceCliente/DeleteClientesResponse")]
        bool DeleteClientes(SysClientes.WcfCliente.Clientes eDatils);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/DeleteClientes", ReplyAction="http://tempuri.org/IServiceCliente/DeleteClientesResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientesAsync(SysClientes.WcfCliente.Clientes eDatils);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceClienteChannel : SysClientes.WcfCliente.IServiceCliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClienteClient : System.ServiceModel.ClientBase<SysClientes.WcfCliente.IServiceCliente>, SysClientes.WcfCliente.IServiceCliente {
        
        public ServiceClienteClient() {
        }
        
        public ServiceClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertClientes(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.InsertClientes(eDatils);
        }
        
        public System.Threading.Tasks.Task<string> InsertClientesAsync(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.InsertClientesAsync(eDatils);
        }
        
        public System.Data.DataSet GetClientes(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.GetClientes(eDatils);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientesAsync(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.GetClientesAsync(eDatils);
        }
        
        public System.Data.DataSet FetchUpdatedRecords(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.FetchUpdatedRecords(eDatils);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchUpdatedRecordsAsync(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.FetchUpdatedRecordsAsync(eDatils);
        }
        
        public string UpdateClientes(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.UpdateClientes(eDatils);
        }
        
        public System.Threading.Tasks.Task<string> UpdateClientesAsync(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.UpdateClientesAsync(eDatils);
        }
        
        public bool DeleteClientes(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.DeleteClientes(eDatils);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientesAsync(SysClientes.WcfCliente.Clientes eDatils) {
            return base.Channel.DeleteClientesAsync(eDatils);
        }
    }
}
